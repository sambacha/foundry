name: binary

on:
  push:

defaults:
  run:
    shell: bash

jobs:
  pipeline:

    strategy:
      matrix:
        target:
        - x86_64-unknown-linux-musl
        include:
        - target: x86_64-unknown-linux-musl
          os: ubuntu-latest
          native: true
          target_rustflags: ''
          runs-on: ubuntu-latest

    runs-on: ${{matrix.os}}

    steps:
    - uses: actions/checkout@v2

    - name: Install Rust Toolchain Components
      uses: actions-rs/toolchain@v1
      with:
        override: true
        target: ${{ matrix.target }}
        toolchain: stable
    
    - uses: Swatinem/rust-cache@v1

    - name: Install AArch64 Toolchain
#      if: ${{ matrix.target == 'aarch64-unknown-linux-musl' }}
      run: |
        sudo apt-get update -qq
        sudo apt-get install gcc-aarch64-linux-gnu musl-gcc libc6-dev -y --no-install-recommends

    - name: Alpine Build
      run: cargo build --release --bins --target=x86_64-unknown-linux-musl --target-dir=x86_64-unknown-linux-musl

    - name: Ref Type
      id: ref-type
      run: cargo run --package ref-type -- --reference ${{ github.ref }}

    - name: Package
      id: package
      env:
        TARGET: ${{ matrix.target }}
        REF: ${{ github.ref }}
        OS: ${{ matrix.os }}
        TARGET_RUSTFLAGS: ${{ matrix.target_rustflags }}
      run: cargo build --bin forge --release
      shell: bash

    - name: Publish Archive
      uses: softprops/action-gh-release@v0.1.5
      if: ${{ startsWith(github.ref, 'refs/tags/') }}
      with:
        draft: false
        files: ${{ steps.package.outputs.archive }}
        prerelease: ${{ steps.ref-type.outputs.value != 'release' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Changelog
      uses: softprops/action-gh-release@v0.1.5
      if: >-
        ${{
          startsWith(github.ref, 'refs/tags/')
          && matrix.target == 'x86_64-unknown-linux-musl'
        }}
      with:
        draft: false
        files: CHANGELOG.md
        prerelease: ${{ steps.ref-type.outputs.value != 'release' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
